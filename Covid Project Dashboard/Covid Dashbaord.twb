<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Table 1)' inline='true' name='federated.1d38okj0ve29my1eet9qn0ss9y16' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 1' name='excel-direct.0xiufg10xuimc81gsifn506j7okp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dellf/OneDrive/Desktop/SQL Project/Excel files from SQL for Tableau/Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0xiufg10xuimc81gsifn506j7okp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0xiufg10xuimc81gsifn506j7okp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E4C56221EC2742E8BD645B103DF2798C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E4C56221EC2742E8BD645B103DF2798C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E4C56221EC2742E8BD645B103DF2798C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E4C56221EC2742E8BD645B103DF2798C]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E4C56221EC2742E8BD645B103DF2798C'>
            <properties context=''>
              <relation connection='excel-direct.0xiufg10xuimc81gsifn506j7okp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 2)' inline='true' name='federated.1jtkgaz1lute1o142tzxa1t3d65g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 2' name='excel-direct.03x8kmd1rnensj183gfwg046d70r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dellf/OneDrive/Desktop/SQL Project/Excel files from SQL for Tableau/Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03x8kmd1rnensj183gfwg046d70r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03x8kmd1rnensj183gfwg046d70r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0D14B30B0004003AB9DE40F7A0C26F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A0D14B30B0004003AB9DE40F7A0C26F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A0D14B30B0004003AB9DE40F7A0C26F5]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A0D14B30B0004003AB9DE40F7A0C26F5'>
            <properties context=''>
              <relation connection='excel-direct.03x8kmd1rnensj183gfwg046d70r' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 3)' inline='true' name='federated.05asrje1s2qqqn178gp5z0jjdgi5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 3' name='excel-direct.1il6pdn0nk1d9n121vdb808oomqs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dellf/OneDrive/Desktop/SQL Project/Excel files from SQL for Tableau/Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1il6pdn0nk1d9n121vdb808oomqs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='%PopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1il6pdn0nk1d9n121vdb808oomqs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='%PopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_890B1121881F4D4AB3BF54530DF2CCD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_890B1121881F4D4AB3BF54530DF2CCD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_890B1121881F4D4AB3BF54530DF2CCD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%PopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%PopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>%PopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_890B1121881F4D4AB3BF54530DF2CCD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_890B1121881F4D4AB3BF54530DF2CCD9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_890B1121881F4D4AB3BF54530DF2CCD9'>
            <properties context=''>
              <relation connection='excel-direct.1il6pdn0nk1d9n121vdb808oomqs' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='%PopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 4)' inline='true' name='federated.1c4nj3g0gflvif154j60l1c46yke' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 4' name='excel-direct.0na2f7x18rqv6512w6v101sap6fs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dellf/OneDrive/Desktop/SQL Project/Excel files from SQL for Tableau/Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0na2f7x18rqv6512w6v101sap6fs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='DATE' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='%PopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0na2f7x18rqv6512w6v101sap6fs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='DATE' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='%PopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%PopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%PopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>%PopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_ECF34E09B45B4CE496C14DE61194DE1C]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_ECF34E09B45B4CE496C14DE61194DE1C'>
            <properties context=''>
              <relation connection='excel-direct.0na2f7x18rqv6512w6v101sap6fs' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='DATE' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='%PopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 1)' name='federated.1d38okj0ve29my1eet9qn0ss9y16' />
          </datasources>
          <datasource-dependencies datasource='federated.1d38okj0ve29my1eet9qn0ss9y16'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]' value='160' />
            <format attr='height' value='39' />
            <format attr='color' value='#ffffff' />
            <format attr='text-format' field='[federated.1d38okj0ve29my1eet9qn0ss9y16].[sum:DeathPercentage:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1d38okj0ve29my1eet9qn0ss9y16].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00007f' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#007bb8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1d38okj0ve29my1eet9qn0ss9y16].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A4584C90-B3C3-45A0-931C-E0B13752B727}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Toll by Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 2)' name='federated.1jtkgaz1lute1o142tzxa1t3d65g' />
          </datasources>
          <datasource-dependencies datasource='federated.1jtkgaz1lute1o142tzxa1t3d65g'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]' value='121' />
            <format attr='text-format' field='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[sum:TotalDeathCount:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[sum:TotalDeathCount:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#007bb8' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jtkgaz1lute1o142tzxa1t3d65g].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{E2D1A22E-ED59-472F-B2A9-7AB60FB376D7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 3)' name='federated.05asrje1s2qqqn178gp5z0jjdgi5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05asrje1s2qqqn178gp5z0jjdgi5'>
            <column datatype='real' name='[%PopulationInfected]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[%PopulationInfected]' derivation='Sum' name='[sum:%PopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Latitude (generated)]</column>
            <column>[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Longitude (generated)]' field-type='quantitative' max='19955576.398747843' min='-16782768.252167933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Latitude (generated)]' field-type='quantitative' max='12988228.520118978' min='-5899697.3560539223' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' max='20.0' min='0.0' num-steps='4' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[none:Location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[none:Location:nk]' />
              <color column='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' />
              <geometry column='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Latitude (generated)]</rows>
        <cols>[federated.05asrje1s2qqqn178gp5z0jjdgi5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6796B68E-6266-41DB-9D9E-E5312CC890A8}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 4)' name='federated.1c4nj3g0gflvif154j60l1c46yke' />
          </datasources>
          <datasource-dependencies datasource='federated.1c4nj3g0gflvif154j60l1c46yke'>
            <column datatype='real' name='[%PopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[%PopulationInfected]' derivation='Avg' name='[avg:%PopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[%PopulationInfected]' derivation='Avg' forecast-column-base='[avg:%PopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:%PopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Month-Trunc' name='[tmn:DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([%PopulationInfected])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[tmn:DATE:qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' field-type='quantitative' max='17.0' min='-1.0' minor-origin='0.0' minor-show='false' minor-spacing='0.5' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' field-type='quantitative' max='17.0' min='-1.0' minor-origin='0.0' minor-show='false' minor-spacing='0.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[tmn:DATE:qk]' value='209' />
            <format attr='text-format' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-align' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='left' />
            <format attr='vertical-align' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='top' />
            <format attr='wrap' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='off' />
            <format attr='text-orientation' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='0' />
            <format attr='text-format' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='left' />
            <format attr='vertical-align' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='top' />
            <format attr='wrap' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='off' />
            <format attr='text-orientation' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' />
              <text column='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]' />
              <text column='[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]' />
              <color column='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c4nj3g0gflvif154j60l1c46yke].[fVal:avg:%PopulationInfected:qk]</rows>
        <cols>[federated.1c4nj3g0gflvif154j60l1c46yke].[tmn:DATE:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Month-Trunc' range-size='5' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7C954209-DCA3-45A3-B630-1A4565E96D43}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97884' id='22' param='vert' type-v2='layout-flow' w='98914' x='543' y='1058'>
            <zone h='97884' id='20' type-v2='layout-basic' w='98914' x='543' y='1058'>
              <zone h='51146' id='16' param='horz' type-v2='layout-flow' w='98914' x='543' y='1058'>
                <zone h='51146' id='7' param='horz' type-v2='layout-flow' w='42788' x='543' y='1058'>
                  <zone h='51146' id='5' type-v2='layout-basic' w='42788' x='543' y='1058'>
                    <zone h='16117' id='9' name='Sheet 1' w='42788' x='543' y='1058'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='35029' id='3' name='Sheet 2' w='42788' x='543' y='17175'>
                      <layout-cache cell-count-w='6' minheight='195' non-cell-size-w='82' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone fixed-size='930' h='51146' id='15' is-fixed='true' param='vert' type-v2='layout-flow' w='56126' x='43331' y='1058'>
                  <zone h='51146' id='14' name='Sheet 3' w='56126' x='43331' y='1058'>
                    <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='46738' id='11' name='Sheet 4' w='85807' x='543' y='52204'>
                <layout-cache minheight='213' minwidth='159' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46738' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]&#10;[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]' type-v2='color' w='13107' x='86350' y='52204'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5405' id='17' name='Sheet 3' pane-specification-id='0' param='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' type-v2='color' w='26748' x='72775' y='1763' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='27' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='121' h='16117' id='9' is-fixed='true' name='Sheet 1' w='42788' x='543' y='1058'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51146' id='14' is-fixed='true' name='Sheet 3' w='56126' x='43331' y='1058'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5405' id='17' name='Sheet 3' pane-specification-id='0' param='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' type-v2='color' w='26748' x='72775' y='1763'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='35029' id='3' is-fixed='true' name='Sheet 2' w='42788' x='543' y='17175'>
                  <layout-cache cell-count-w='6' minheight='195' non-cell-size-w='82' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46738' id='11' is-fixed='true' name='Sheet 4' w='85807' x='543' y='52204'>
                  <layout-cache minheight='213' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46738' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]&#10;[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]' type-v2='color' w='13107' x='86350' y='52204'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A7748A6E-427A-4DEF-A14F-7BBC9CE50DEC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d38okj0ve29my1eet9qn0ss9y16].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0CC95C3-DB49-4045-A24D-1B8C3C5F0C21}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91959C9E-479B-411D-959E-1669793F6DC8}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.05asrje1s2qqqn178gp5z0jjdgi5].[sum:%PopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05asrje1s2qqqn178gp5z0jjdgi5].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1CC65BB0-5FE8-4E8C-8E7A-BF0B7B540769}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]&#10;[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]</field>
            <field>[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]</field>
            <field>[federated.1c4nj3g0gflvif154j60l1c46yke].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F8DA4D2-FADD-49DD-9FAD-12E4D96D1CBD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jtkgaz1lute1o142tzxa1t3d65g].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Forecast Indicator:nk]</field>
              <field>[federated.1c4nj3g0gflvif154j60l1c46yke].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{C8001BCC-FDA8-4D58-8D67-1592784D0E4E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2953NcWZqn91yX3sF7S5AgaIugKVYVq6qrqrva7PTErHZGMRHaGI1CG5JC
      Ebv7RVKsPihi9DfIzO4oRpoJ7ezEdkg7q5np7umuKpahLXpvQXibyER6d93RB4AosooJksUE
      SALniQBw8+bFOe/NPL973HveowghBBLJFkUHEEIgdSDZiugAruvyp3/6p+zbt+9l2yORbCj6
      w4P9+/fz7rvvvkxbJJINR33ZBkgkLxMpAMmW5lsCEDiOjWXZslMseS1xbBvXXS67juOsnhdC
      YFkmlmXhPlK2HxNAavYBvzl+mmtXLzE5l9ggkyWS2mBm5/n1p1/xyedf4tolfv3bz1ffE67N
      n/8f/4ZbN67zH//uNzyUgP5oAtnEHKHGTobf6ENRFI4fP86HH37I3csnqd/+Jqd++7d0drQx
      l8zR1hBG+OrxledJEyGzMEVLRxeJ+CIffvwjRm5cIV8s4qvrQC8vkljKUBQedEXlRx++y1df
      fsE77/0ATdnIj0iymVmaHadr50EW7n3N5XPn6epqZSlbpD4SAKCxtZP9Bw4wO/m3FPJLnP36
      6uM1QPfeY7R6snz26W+4PxUnmUwCUMimMG0XzRvm0KFhQOXQoQPMz0xTLOQY3DNMQ1Clb2iY
      qMckXwHhumgeg1s3bpBfWkBEOvnpR+9j5+Kk0otkK6os/JKa0jLwBrnJq/gMhUw2RZEoX58+
      sfp+fGaCC+fP09C9jeunTrP/2PuPC6BYyNM3uJcfvHeMW1cvo2sqjisolcrPZUglE2cyZbF/
      9xC6qoDuY9f2PgDeOryHv/i//pp9wwdrcMsSyTcouo9j775L2RQM9TbjD4VRH3nINnf0cOjw
      EY4c2EMkEiCVyj3eBMIxuXTxFqqq8eGHH2DnFrhw8RK++i4iPp1dO7eD8vCvwa6dA/g1h5AH
      egZ2ETCW/9Y1NtERneTW/Qn27Bki5tcI+pazirVtp6nxPJ0NwY38bCRbBKuYYseeg7S11xG/
      dIHBPW8AoCgae/fsWb1u15vvc/3KJRQhhHAch9OnT2/IRNjIrcs4/lYG+9rWPS+J5GnoT7+k
      tgzsOrDRWUokVZETYZItzWM1wMmTEywtlV6WLZJ15NChDtrbwy/bjHXFtu3HJr+ehccE8K/+
      1aecOjVVE2PCES+KEGRz5hPfNwwVy3LRdBWfR6VQtGuS71p4fDp+r0apaGFablWbvD4DQxXk
      q9ikaiqK6+I8x2R5IOhBOA6l8pO/oId5A+iGRsCvkcuZ1GpC/he/+AP+4A921yaxVxTHcfB6
      vc/1P+vTB1BVfvCf7CMwPcdXd/M0RzS2Hehl/sY4WdVHaTHDsQ+38Zd/eY0//Kf7uXlxinQJ
      Yl5BPC9oDMBCXtASUkiWoN4nuH4n9cJmRetC/Df/bC9/9m8u0tNfjx0Isj9q8vn1HDGvYOBQ
      J7/6y6v8Z//FMGOTWQpTC5Q8AWZHF+kcaCa1kOH3fn8P18fzNBazfHF+np4dTdy9Oku6sPaT
      57/8rw4xu1jm6vHbNPc3cu3yAm8MtzE1leX3//EOUkWLO5cXuHJ5lsP/aB/1lTQgmEjaTD9I
      0tgRoZAq0driZ3LBpCkEWVOlqd5DuL2BYCrJnaTAqJRYKMBgT5Db99MMboty/vzcC392m5X1
      EYDr8mAsTWB8iY8/2kEi5xDWHE6MZXnrw2a2vd3KUs4GdHRR4cr1BO//aDtvH2zi+q00bjHP
      R8O9ZOZTLGRd3GyuJgJYnMswOZmhfVcX9sIiwboYM2ML9PY18fbhJsZmCgCYxTJfnJrhX/yz
      /SjlPPfb/GiGzttv1LOUKDC/ZFLMmfz8d7aj6DqJiQTpwtpNx+xSgS8vpvkf/uWbXPt6kdj7
      HkLBAP3tBgsLeSyvl5Lm5+D2ICgQDOikFD8/6FEZ74jS3+NlKSf4xb+7zn/9L94isZDGr3sY
      S5j4dIeRByn6D/RyYLCHuWSFpbzLH7/dzWKizNyIdGupxrqNAmUTeSpFh5HxHE1hlXNXimwb
      aMCjwehoikzRBSxGpkyOHW0j4NUYfbDExESGHb0hrl9fwErnSJRgsDuAAtSiNTAxkWH0doaP
      3m7lwo1FhgeiqJrGg5EUs/ESDhBPWXx8rJX/599f4+hbHYyMZdm1o47RsQym4cXvmMzHC4Qn
      dCyvn7qoB2bWFkCuAu/s8PG//tlNDu+OMh232NZSYj6Vp77NSyGZYjFepGLaMJ3i9q1xslqQ
      0E+6uXNniblpQco0ODzczLVrcUrpHD6vh4WCi1Us093bgNejMPIgRbIEw/uauXB+Gr8BqeLz
      tYu3Eo/NA/zFXye4cm3+ZdtUFUNVsNxX00v1VbJt285m2ut0Tp2Z5WFP53/+nz7gd36886Xa
      td5UKpUX6wPcfaOdS/WBmhpVS451Rfh6KvuyzXgir5Jtlx4e/KB/9dyvTZffeSnWvNrIeQDJ
      lkYKQLKlee5OcGPA4J/sbuGvrs7RFvayuznESLJI2XEZbAiSN22+HF8esfnDva3M5SpcX8iz
      pyVEb8zP2ek08zmTPx5u5385M4kA3uyMEvXpZMo22YpNc8hDf12Ar6fTNAU99MX8/MXl2Re6
      0b0tIZqCHsq2y+nJNF5N5T8fbuffXpljsDFAQ8DA0FRGl4psqw+QqzicmEihqwof9NXjN1Qu
      zmY53BFFUxR+fX+R9/vqKVsuJydefITqaQQNjWM9MYIejd+OJMmbDtsbArzXW8efX5xhR0OA
      Yz11/J+XZvjJ9kbKtsNMtkLRdJjJVdbdvteV564BEkWL0VQJVVHQFIVPHyQxHZehxiC/vLdI
      ZMXrUwHuLBYYS5Wo2C4nxlPkTJuJVJm3umOMLpVQVlxV2yNebsXz7GsNc3uxwFLR4sxkmlvx
      AumSzenJ9Avf6PWFPLPZCtEV+yqOy0S6jKpAQ8DDrXiBmE9nR0OQX91LEPMvX2e7grNTabIV
      m7awl5lsmXMzGY711KGrCncSBbz6+lekBcvh0lyOvOmgrnxw95NFMuXlybp7ySLZio2qgK4q
      NAY87G8N0x3z4dVkRV+NF/pkZnNlSpbDG21hTNcl7NEwVAWPpmBoCiNLRQxNYWdTkP1tYW4s
      5Al7NRCCoaYgnREffkPlt/eThL06iwUTVYHBxiB3EgVUBbY3BLiXLL7wjYY8GveTBQKGhv9b
      BTbqW87bccERgtAj9+HVVH5vVwtnJjPcTRSo8xs0BgwW8iYV20VXFfa1rr+LQcSr8VF/PZ8+
      SJKr2PiqiM4VcGoiRdl2KVoOZdtdFbPkuzy3ANrCXgxVYV9riICh8U5PHV9PZ/hiNMWB9gin
      JtP8aKARv6Ex1BSkOejhylyWbMXmfrJIomjxm5Ekf31tnpxp815vHTG/TlPQwycPkgQMjRMr
      TYqgofHVeG2aF11RH+/01PHV+BK/O9RMyKOhKbC/NcwXo0u83R3jwkyG46NLDLdHODGR5sfb
      Gwl5NeKFCke7ohiqylSmjKIoXJ3PMZYq0R318fVUpiY2roWhqSyVLI711BHz6XREvAw1BSnb
      LntbQuxaOd7THCJvOlyezXJ2KoOhqcTzT3ZHkXxrHuB/vO3hVA2aGz5dpWx/19fm23g0BdsV
      POvw+bGuCCdrMNT4rPY963VQO9vWi//2zS7+t5/vetlmrCsvPA9QK5610JjP401WQ57Vvme9
      TvL68pgA/vzn2ylUXt3q0q+rlF7RQvkq2wbQFH51JzhfJo8JYLCt/mXZIZG8FOT4mGRLIwUg
      2dJIAUi2NFIAki2NFIBkSyMFINnSSAFItjRSAJItTU0EUCgUapLG8zhGmOUipu1SLBRW170+
      eiyRPAuPCWBm4gHH/+4X/NXf/Ib7Y9OPX+naXLpy7YmJHD9+fPX4H/7DLzhz4QKf/uYfmEms
      7RyWXhhldGbZ+e6L48cfF4BrcvXSJf71n/7vnL9wkXT+8RDtUzdOM7JY4dTx4zx03nj0+IkI
      waWvT3L263NcvXl3TdugwqVLNwBITN1nYuH5HN2uXL70zE5+kpfHY64QHT3b0EsJNLOV7X2d
      TD24w/RiBsMfpr8lyOlTp1F1LwOd9dy8N0a5YvHW228/lqDtKOw/dAifXeZvf3Wc+h8c5dL1
      O7iKxltHjzBy6wrZfJlIcxf5iSvcTYXR3tyHWcxy6eJFcsUK7x97C1X1sH94mAejDxg+eBAN
      h3OnT+IA3QN7n3gzrlPhysWLlPJF3jryBldvjvHmob2cP3+Bw4cPU84tsJDX+elHRwAoZha5
      eP0eiqJx+M0jfP3VpwSj9ZRshZ09MU6fPoPh89ARU3CFwqUzJ3G8fnLZIu++e4y71y+QK5q0
      9QySXxyjZCvkMlkOHjnE6dOnsRzB0J79hHzSH/9VpXoTSDhcvjnC0aNvYi2O4YZa6Ont5409
      g3i8fjy6RnziLrNVYomqug/hVDh74ksiTa2QnebmRJJgMISmG1w8f47Ori52DO2lp6MFwxfi
      wPAwdiFFxf7uozP+4DJOrJ+33nqbS1+ffHKempc3hofZ3ebj8niG6bG7lPJLxNPLtUclu4gn
      3LB6/alTZzn45lvs6q3j/LURUrkSw8OHSMVnaWxto6enn727dlDKJljKVYgvJtl3YBjdKZBL
      znD57ixt7e2cPvklCwtxdu7ZT1fEYS7vobenh+GDB2Xhf8VZsw8gVholrhCoqoKy8vrE8eP0
      Du1joLej6m6SxfQ8vnATAD5/gKFD77G9zuXC7WkODL+B36OhaQaOs7ykT1FVFEWh2q5Jqqrh
      2PaKTWvsraQolMomfp+Xw7u7+bd//bfsO3gIgGBjD9mFUQTLuwaqioIrBK7joKoaqqquLtME
      DUVxv5X0so0P89F0g1AozE9+/ENQVDRFWTVNURRqFthTsm5of/Inf/InQgimpqbo6enBtS1U
      X4SGSJCYX+fG7fsEGzvp62jGKqaYTxXZ1tXMnXujVCybzu5edBxaWloAKORSzC3EiSdyvPXW
      YTo727h35w65XI76tm7KS3MsJFIEw1G2Dw4xcf8miieAz6PT1NKCaZo0NjWjrextUy5XaG1r
      I1jXQnLqDuOTU+wdPopPB2+4EY9i09jSgsZyE2hyYoqc42d4Vz/RhiYuXr7OB8cOowCq7iXi
      E9y6+4BUtsiB/Tu5cukKS0WXwwd2YVsWLSs2tLS0Uc4nWcyUaYyF0P1R/AY0trTgWCb1rT14
      nCzxZBoHnXDQT0NTMzgW3nAjHTEP1++M0NDcjiE3Q9sQHMdB15+vxt3wHWI2DsHtK+dxgm3s
      2d71so2RbACvzIqwVwOFoTeOvGwjJK84ciJMsqWRApBsaaQAJFuaTdwHeBURnP3qOHjr2PfG
      ThKLGRqjAZYyWbyGw8Wr0zSFNNp3bscuWrQ2RplNZGiMBFjKZjEocWMkwwfvH0YOLNUGKYAN
      ZjFT4uc//4h/+OXf0xbz8vnIAgf272AyU8Su6GQrCa5/NkWLanBGqeCWbQzNQ19vGwtlC5zY
      WrMgkudECmCD6Wqp4+zXl2horieeTNPT2UZzcxM5pUQqM4k/EqUlGqUJCHtAU0NQzNDc3Ixd
      cEhMzeMKUKUKasK6zgMIIb6ZOZVI1pnvMw+wrp1g15XOyZJXGzkKJNnSSAFINhTLsjh79ixC
      CC5evMj4+Dg3btzg5s2bAMzMzPD5559TLBY5c+YMjuNw/vx5hBCcOnWq5vZIAUg2FNM0SafT
      xONxbt++TaFQIJPJkE6ncV2X8fFxSqUSc3NzZDIZXNflypUrTExMcP/+/Zrb89RRoF//+tf8
      9Kc/rXnGklePGzdu0N7ezuzsLJlMhp6eHu7evcvRo0cJBAJcuHCBpqYmstksmqZh2zaDg4OM
      jIzQ2dlJLBZ7ah7BYBCfz4eqqgwMDDA3N4emaavvFwoFurq6sCyLYDAIwLZt2zhx4gRdXbV3
      aqwqgFQqxZmzy1WQZGvgui5LS0tMT08TDoepr6/HdV0SiQR+v59bt25x5MgRcrkcrusihODW
      rVuMjIzg9/ufSQCJRALXdSmVSkSjUfr7+ymXlzcdSSaTHD58mPv3768KcWJigoMHDzI4OIjP
      56v5PVcdBr19+/bq8dDQ0PdK3HGcx9QtebWZmpqiUqkQjUa5evUqe/fuJZvNks1m6evr486d
      OxSLRVRVRQhBJBIhkUhgGAZ9fX1s27btpdpfU3fo71voJa8nQggmJyfRNA2Px0N7ezuqqhKP
      xxkeHqZSqVBXV8eOHTsoFotomkYoFKK7u5tQKPTU+R4nnWbmn//Lmtnb+Wf/GtXvf+F0qgpg
      cWaML85cJuJROPTxP6bBByCYn57AV9dGOT1Pvixoa4kxOR2np7uNZKpEW2OIqfkl+no6X9g4
      ycahKArvvPPOd843NS0va63WxIlGo8+WgQAs60VMXBeqCiAYqaOjtYlwXRMRz8pJITA0l2y+
      QiGVRvNFmJ1P0NfRyNj0DJm0ie6EyeTKuK4rJ8JeE/7vKxe5l4jXJK2f7hji7e7e75x33Nr2
      JR3HQaz0TxVFQVW/34BmVQH4/AHS6RSBcBTXZXnAVFHx+/0UKtDR3cfS3ARp20OhVELTNGJB
      D3NZk6Chrhr1fQ2TbBwCgVOrBfwKT/zORY3LgaZpKDVIs6oAFFVFFRZTU9NsH9qHFxCuw0Iy
      h6NaCMOPEW1lb2OEmbkE/T09OLagYtloKqttQukLtNVQnvidV4/38QI51aBsrTEPoGDoBvGF
      ONbKw0FRNfq27Vi94mHrr7urYzkxHby+5+uFSyQvk6fWIYFQWC6+kGxa1pwJ1nQDX8CHV64a
      kGxSqhZtIVxyhRKKgKIFHtmykWxCqjaB7t1/wD/6+e+yd9cOZD/25eK6LvPz86uOYbZtc+7c
      OUZGRgDI5/NcuXKFSqXCtWvXKJVKzM/PY1kWk5OTL9n6V5uqAsgvzfGrX/2a8zdG8UpvhpfK
      7Ows586d49q1a0SjUU6cOMHNmzdpbGwElh0WTdPk7NmzeDwezp07x6lTp7h37x6XL19+yda/
      2lQVwKG3P+B3fv5zfv+f/C4+KYCXSmdnJ5FIBNu2aWxsxOfz8Ud/9EecPn0aAI/Hg6ZpZLNZ
      6uvrVz0pFxYWnn2mdotSvQ/gupz8/LekSy4ffvwzgp5qV0rWm9HRUTKZDDt27ODs2bPs37+f
      r776iu3btxOPx9m9ezfz8/McOXKE69evc+DAARzHIZVKrYsH5WaiqgAWZifIWypDQ9vxyBrg
      pdLf309/fz8A7e3tADQ3N6++39zczMDAAMBqlO5vXyN5MlUFYFs2Hq+H5OwE9e3bqPcDQjA7
      +QB/QydWLkG66NDRFGZ8Ok5PTzvJpSLtTWEm5pIM9HVv4G28PB4u1fP7/WiaxuTkJD/5yU8A
      OHnyJO+99x4nTpygubmZpaUljh07xvHjx/noo4+emraVvU5p+i9qYqfqbSW07b+vSVqbiepN
      ILvC2NgYHR3djzR/BH6fQa5gYhbKxDxwb3qJXT0tjM7MkkmbGKJEvlhZdYartoHGZkEIwezs
      LD6fj5/97GekUilUVaVUKuE4Dq7rsm/fPq5du8bCwgLj4+NcvHiR999//6lpO2YaO3+rJnaq
      dh7btqveQ61wXfeJ+bjr4AznruTzIj5nVQXQuW2Intu3SObyOC6ggUBB11Qc08GyTPIOeFSN
      dCaHruvUh2A+axI0lNVFE5t9QYxpmoTDYRzHIR6P09bWhqIoBAIB4JtF4D/60Y+4cuUKn3zy
      CXv37n2mjRxctXafnaIoVfOspb+WqqpPzMep4b3AsjOc+pybYTyJ6ikIQWt7O8kHCYTyzbl0
      wUZRS/T3dJEtO/RGg8zHl+jvacNxBKbtbCnXCY/Hw86dO/H5fASDQVpbW8lms1iWRSgUYmFh
      gYaGBiYnJ9m1axf9/f14PHJE4VVhDQkJ7t28Rv+edzEdCOrLHqJdPX2rVzQtP+Rob1vueGka
      bJXv1p48Ayv7m3UBlJd/3CSEVq453AowQ3cLwBwszvFwTMZOfpOW1rYfxRfZGMMlj1FdAIpK
      IBTi7sgYe9948rakW5nSL/87KGdqklbgD/8KrW1/TdKSPB9VBXD94hmUcBtR08WQa1okm5Sq
      RXtmPk40HEKvJIjnN9IkiWTjqFoDHH37XYplk56eHpqDG2mSRLJxVBVAMj5HPJVHUVXqm9vR
      ZTNIsgmpWqwbW9qIRYKoNR6/lUheJaoKIBKJcOX0Z9wbnab45AlEieS1p6oAFEXl0Hsf0xDU
      n+gMZ1kmxWIJIVzK5QrCdbFsByFcrFcwAJJE8iSq9gGmRu/w2ZdnaX/Eu/BR7t68TiDWjOaW
      KZVNvEE/c/N5dvc3cH1skWNH3lg3oyWSWlFVAF3bdrNvZp6iCOB/wlUdXd1MTUxAIMZQbyf3
      p2bxGwpz6QqNUf+WcYarBY7jINbZgUwIIZ3hnsAaC2JsSrZKWM2TrrASG/QbivkcqjdIa0OI
      O6PTdHS24ZoOqUKZoNe3ZZzhaoGmaWhPcOySznDVWXdnuKmZOfbv2UHB0r9T+AE6evrpWDlu
      bGpdPd/4wiZJJBtHVQFcu3AGb7geRdVpbm0jYGykWbXBNE2mp6fp6Ojg0qVLDA8P4/F4uHfv
      HsFgkGAwyIMHD2hvbycQCGBZFo7j0Nra+vTEJZuCqgI49uGPqaur20hbak4qleLOnTvMz88z
      MDDA2bNnOXr0KIlEgtnZWRYXF+ns7GR6ehrbtimVSoRCISmALUTVnsPrXvhheX1sIBBgaGiI
      y5cvr3bKdV1HVZcjXQcCATKZDJZloeu6DOa7xdjUQQ/HxsYoFotks1n8fj+HDx8mn8/j9/tp
      amrC6/UyPT3N/v37cV1XhnLfgmxqAfT19dHXt7yAp6enB1je6eRhQCmAjo6OJ/6vZGvw0gTw
      cKPkgYEBYrEYo6Oj5HI5BgYGuHr1KoODg5TLZWKxGHNzc6thP57G35y4wyfnH9TExrf3dPFP
      P95Xk7QkryYvLICFmQnmE2maWxuZm88x2NPAzbEFjhzYs+b/TU5OEovFuHr1Ku+//z6xWIyR
      kRHGx8cJh8PMzs4yOztLfX096XT6mQWQLZSZSeRe9LYASOfLNUlH8urywo3efNlm1/ZeUukM
      rmUyv5Qj5H/6mOnDSbKHnc67d++yZ88eDMOgv7+f0dFRPB4P5XIZw3gNx2AlrwUvXAMEvRq3
      7o/T1NJE2GezVKgQeoYNBbq7uzl37hy7d+8mHo/jOA7j4+McPXqUW7du8c4772AYBrlcTs4m
      S9aNFxZAa2cvrY/siPqsm9mrqsrRo0dXXz8axu/YsWOrxzK4q2Q9qbpT/Iviui6O42zI0OKj
      Q5i5okmhbNYkXb/XIBpc3hnkocPYwyabm50BUZttYNVQC2jL8WQevRfhlhFWqiZ5oOionuU9
      f4UQj8135CoVTKc2zmpBj4FPX26yPja07LrYi4ma5AGgNzfx6MYVmqbVdqf4F0VVl7dK3YiJ
      pYd5AcTCfmLhF99B/Nt8WwBa3frEPn30XtCCYNR+Qfa37yW2EsWu1jx+Lxpae9u65PMi3qzr
      +niuVvitcp5bt24yNjX71DQKhcJTb/BpIkvMTTGXSFNILzI2vQBAuZjHfo4H+LOKOZuMMzGz
      sPr6Wez/dj7TE6PcvTvCt5/JwrHI5gskEolHT3Ljxi3WzMG1yRe+GdFavheTmzfvk1qMU7Yf
      zymbzSCEeCyfVHyO6fm1n+ClfP4xm9f6vMZG7nJ/ZPS5voNqvMhD9qXMA8zNzNAzMMTs6D3u
      38/g8UdJzozheKM0BhTmszb1AZV8xaUuGqa5IcrVK1fZPnyM5vDzhp4TpPMlBBXS2UXU+g7O
      nTtPQyyCNxQiky3QGPFz5/4YR95+F7/xYjXWYiqLIwTTYxmSJYWIX6MxFuby5avsfetD6vxP
      f+aUS0V0X4zZ8RHS2QJew0tzVyez4w9YSJdoqQsxOzNF7/Y9aJUlhHBJZzM8uPcAyzIJRetQ
      zSzpskp92CASi1JxfISCj7r1OhQzaWZdi3ClTDadpS7oYSxRQbXSdPYOEp8aYS6eZO+uHSQz
      eQQwWUqzlIiDP0LE52d6bo7W9nbSiSXqYlF6B7fzLEMW+Xwef7iB8bFRmiI+Epk8eVPDp5Qo
      WwK/16BSKhOpizI5Mcm2XcO0N4a/79dSlZcy9x8M+JmdnaFkOTi2SyjopWy6NNTFSGVyVIoF
      PIEwLQ1RLMsiHl8kHDBIZUvPnZdjlUkkUyQTSQLRetpam2hq78KnQblUIRyNkkguoSsOJfMF
      28HCIbkYJ5VIoPoj5NNJyuaK/X6VdOHZlorG6hspLs2xVLAIB32Uy2UW5udRPSHqY1G8/iC9
      Xa1YlsPsXBxNg/nZORpbOqivryMc8FIsV2hqrMcbCNPRXI9lOVQqFSqVymo+TW1dJOanKZfL
      RKIRysUCHb3baGtqIhgM0NjSTjjgRQiHxOIiicUERVejt72B5s5+SpkkRiBCKOClrbMHDRfb
      qmBZFqa99mfp8fqJxSI4Zpm5+QUsR9Db14PjCAwNLBdCAS+ZTJZQrAH/Om1Vum6d4LUR5LJZ
      vP4QKjZl00FXBI6iobgWQjXwGss3LIRAVQSFYhl/IITxnPFZhOvguAoKDo4Luq7jui4IF1XT
      yOfyeL0GpuUQCAbR1BeoAYSLZQs0VWDZDmXTIuDzoiAolcr4g2H0Z4gcXC4VsByFoN8gV6gQ
      DvrI5YsEggEqpSIenx9dVRGKiuvYGIaBZZkoioYQLoqi4DoWFUvg93nQNRXLdhErnfbl4Lwu
      ti1wbAvD4yGXzRGOhHCFgopDoWzh9y7XtpqmYDugKS6Wo2CoAqFqCNelWMjjC4RQFWVlUEAg
      UEBRMfTqdUExn6NsOYSDfoplk4Dfh6brOGaFiiNYis8Ta2giHAqQzWQJRaJP/W6+Tyf4JQlA
      Iqk9tm3jPOdo1qZ2hpNsLXRdf6Z9Fx5F+v9KtjRSAJItjRSAZEsjBSDZ0jzeYyrp2sIAAA0l
      SURBVBCCOzeukC3bROtbGNz2/af7f/PL/4/G1k6iDS0M9HY+/R+eg/HxcXp7e2uapmRr8pgA
      8vFRJrMqH79zGCEE6cQ8IxPTROpa2N7Xwa3rV6i4Onv27CW1MMHkXILtO/fgcYvcvPuAWFMb
      21cKe7Zo8uODBwGwKgVu3LiNL9LAzoE+JibGSM3P0rP3IIvj9yjYGvv37iKfinN/bIq27n4o
      pZhbXKKtaxutdX6uXL2ON1xPW8zH3//93/PuBx+zf/eOjf/EJJuKx5pAk6P36N62XKgURcEX
      CNFYX8/pLz8nn55kZM5k765BhJXnwvUHHNi3ixNffsn5E1/RuXMvXa3frLUt5tKMjo6ykEjx
      1eef0z+0Fzc1wchsml/+v/+OiidG6sE1Sr5GuqMup6+O8OXJs+w/cIDGaIhIrI76ujo+P/4Z
      9y+eQGseYKC3g/qWTnp6emThl9SExwTQ0tbBwuzM6uuvPv8Mwx8mFgzgiXUz1BXgxBfHmVlM
      Mjs9xdXrt+nu6+PoBx8xfesyX546t+qUZXh91NXVEQz4KFmCsN9LY0OUVCZP58Aejg7vJpdK
      MjM5xkSiTHdLCEX1YGgaXq/BZ58eJxyrx+/V2XH4B5AY4dNPv8JCyNAlkprxmADqe/Zg5CY5
      d/4Cdx9MEI2EmZmaoGDamPk0iWwJQ9fxBhvY0duG47roms7C3AxC1dG0b5JrbGqhrq6OUMDP
      gd3bOXHyNNfH0+zd3kYsFgNg6OARlHIexxUYuo+ethhnvz7H+PQCwYCXibFRHMVgaXGeigO6
      rqEAYZ/O9TsjG/pBSTYn0hVCsqWRw6CSLY0UgGRLIwUg2dLURABCiGUfe4nkNUPWAJItjRSA
      ZEsjBSDZ0kgBSLY0UgCSLc1zhlgQzEw8oFBxmJkc48H41DqZJZFsDGuuIP7kyzPsHhygvfWR
      mJJOmXzFJZVawh9tXh0CFULITbElrx1PFIAQgl9+8hWfnzqHoiirAlBUlYDfTwVBT/8gs+Nj
      WHSir4QNlF6akteNKgKASDjED94+zA/f+yaEuetYJHImmpVA9ylEWzvwKAqC70YclkheB54o
      AEWBd48Of+e8qhkM7Ni57kZJJBtFFQEoXDt/ismFFIqm88EPf/Ja7hQvkTyNqqNAu/YN4/MH
      aQsZlKSbj2STUnUUSPf46GmJsGQHqH/eiOQSyWtC1RrAdSzOn/4Sq5hnUe4WKtmkVBWAomq0
      dfUxNx8n8nwRpyWS14aqApgaucXtiUUMKpj2RpokkWwcVfsAnf2DvO94aAwsR2KQSDYjazaB
      5ifvc/76CIbcp1qySanuDKcoqK7JtsGhtXcglEheY6o2gYTrsDA1zv35Cm3dPfhlLSDZhFQV
      wI3r19jzzo/p7u4hJOcBJJuUqk2g5oYYU5NT3L59mxfdPVQieVWpLoC2LoqZBMlkEke6Qkg2
      KWt3glUF+zm3nZRIXieqCuDG5XN4gjEMXWfVzV8I8tkUFdsll04ST6Y3yEyJZH2o2gnee+BN
      pv7ub7BFkIcrHYVwmRm7R6zvDVLzCTQE9fVR1JUL5JJIyetG9WFQ4ZJOZ4g0BlfPKapGS3MT
      FQSaZmDg4ADKynpguSJM8rpRVQCKZjA4uIO0qeNfWQzjOhbxpTxKJUk05KFoa3gVBaGqCCFQ
      VRllRfJ6Ub0GcEwyJZeYVmCpAo2+5SWRO3bv20j7JJJ1peoje3p2HjMzy+3ZLKE1g6dIJK8v
      VYt2NBJh+55D7ETgyr6tZJNStQbILE7zyfEvuHbzDnImQLJZqSqArv4hOut8FCwhA4hKNi1r
      DIMKurq7KRHEkq4Qkk1K1Yf7pa9PMDKdYG5uBl0O70s2KVUFcPCt96kLelAUVS6JlGxa1mje
      K3R09xI2oCJHgSSblDW8QWF+eoyyt446GRZFskmpKgDhWDh6mEa1wExaRsaSbE7WiAqhszB2
      k9M3xpi4f3cjbZJINow1FsXbNPftZkC16N+7fyNtkkg2jOpePopKXchLmTrqfRtokUSygVRt
      Ap3+8jMmpxfYN3xAzgRLNi1Vy3Y+lyWfjvM3/+E/kje/+/7C7JTcJVLy2lO1CXTso59x++oF
      EukiT5oJm5udpaGjb3V3yIe7RUokrxNVa4D04gzj03PowRi+70SFEwztPUAhsYAJcotUyWtL
      1Rpg5P4IuIJINITtgv4tqSwtzuOva5RLIiWvNVUFMHzoMPFMhW19XU9oASm0dXavq2ESyUZQ
      9ZEdqW9moK+LuYkRitZGmiSRbBzVXSFcl+uXz/NgYpp4fHEjbZJINow1BGAxG19CqRS4eOPW
      RtokkWwY1eMCqTq6MFGinbzX37WRNkkk64IQgqJlMZ1OcXN+jpHF+NquEM2N9Xxx5iR79v/z
      DTRTIqkNQggKZoXRZJLb8/M8SC5Ssix66uoZbG7hWN+2tUMjFk2XH/7wh0+YB5BIXj0c1yWe
      zzGyuMjthXkmUkt4NZ3ehnp2Nrfyo507qQ8EH/ufqgL4+sRnLCzlmYjn2D44tO7GSyRPw3Fd
      SpZFvlIhWSywVCiQLBZI5PMsFYukS0XqAgG2Nzbz0Y5B2iJRAp61tzeqKoCu7l5yxfuUskUs
      57sTYRJJLbEch4JZIVsukyoWSRYKxPM5koUCuUqZkmVhOQ5+wyDk9RLzB2gMBmkJh9nd2kZ9
      IEjU70NXn6+5Un2f4L4ddPbtQLguQq6KlzwnQghMx6FsWeRXCna6VGKpUCBdKpIpl0iXSliO
      Q8W2URWFoMdLyOulIRikIRhkoKmJo719RH1+/IaBV9drEoFcCIFVyZBPPVijE7yCosqoEJLH
      cYWgaJpkyiUS+TzzuSzJQoGlYpFcpYxp21RsG11V8RkGIY+XiM9HzO+nPhikPRqlLhAg4vPh
      1XW8mo6urV9HUwiXciFOLnmPxamTFLNTqJpBqG6NTrBk6yJWCni6XCJZKDCfzRDP51nIZSlU
      TEq2RcAwCPt8NIXCtISWmyEPC7VH0/HoOvpL8g1z7ArF7BTphauk49coFxfRdB+x5n10Dv4e
      wWgPume5MywFsMUQQlCxbfJmhdxKeztRKLCYzzGfy5KvVChbFj7DIOrz0xgK0hqOsr+9g+bw
      TkJeLz7dQHsFHB9d18aqZLHKaUr5edLxq+SS93DsIv5wJ3Utb9C3/4/xh9rR9CeHNpEC2EQ4
      rku+UqFgVlgqFlkqFljM50mtHJcsi7JlYeg6AcMg5g9QF1juTO5pa+ejHcsF3G+8/AIuhMC2
      8ljlDJViglJ+jnJ+jlJhHrOYxLHLuK6J7gnj8dXjD7VS17Kf7l3/KR5fHYryBPuFANcF2wbb
      AsuWAnjZCCGwHAfLXe4Mmo6DZTuUbYuSZVE0TSq2TdE0KVomJcuiZJmULZuSZWI5Du5Kh9Nx
      XQKGh7DPS9QfoCkYoitWx772DuoDQXwrHclvN02EEAjX/ua1a+E8sjeu++h7wgWx/J7ARbgP
      Y4cLhOvgCgfhOgjXRrgWrmMhhI3r2rjOI68dE+HauK6F69i4ToVKKUk5P49t5nFdC033Y3jC
      eH31+AMthAKdNDUcwOtrQFV0NDRw7OUCbVXAVFHGF8CcArMCpokol8AsISoFKGcRZh7hFBF2
      EeEUv78AysU8pqsSCQW+bxKvPY7rYjoOtuNQsS1s26RilbCsMiWzRMUsUaoUMM0iplnEsopU
      zAKVSgnHLGJZFUyzBI6F6i4XYMW1cYVAw0VFQcNBRUXDQVd0fKqgQffg0RSChg8NB02AoaoY
      moZaUSDrLhfUFYSAhPutIPff2v5WeXSoTwjUR93EhIuC9k1igIqKQKy8VlBRlveJEw+vEaho
      gIICK8esXKuhwMpvVtJTiHkj+IKD6JofTQ+gOAoUgYqGktcRKqClQMmApqBoOmga6Ct/PR6E
      KhABFUJehOoBNQCqCurKdaqGqntBNUAzvq8AXMbGJhACBvfsfvFF89ks5HPPZ4EQ2N9zB2+P
      svwkc91v/Lxd28K2TFy7jGObuJaJbZtgm1hWBcc2EXYF0zIRlolplVEcG1U4qMJBdx2EK1CF
      gkeoeFa+YoSKEBoCDVfoCKHj4MURPiyhYgkFRygIRQNVXR7mcx1QWP6CFWX5y4Plv44JjgqO
      As7yeUdVcYRDWTigKN88zV17+WmtqgjHAgQIZ/UcjvXNE11xwTYRrrWch7AfEZFYfeovr48V
      wDe1Aojla1UNxfCC7kUxAqDpYPhQDD/oxjfndR10P4rHD7oPRfeB7l2+P1UFRVluwqgKKCpP
      XJNbDQE4Kz9P5Xs3gQSGN4AHB0sIdMfBNE0URUFRFFzXXR2vfbhS7OGyyScd6+kUxlLyuSxQ
      gbXn+KpZDkI4q2k8ROHhw225kAo1gOoBywB8y/fiiuXrbKGgCTABRyz/WELBXvnrrFwrNAMX
      FXclbZflH7l49BHslZ9nL7U15XsKQMXvgaLjwasooGn4fL7vvySyu2f5ZwOo9ixR+H6Ckrze
      fE8BKHR0962+kk80yevK/w/wR0S5Z9zRBQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      3Bn+f4vFhjA17A7xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RCOTYwDR0P4/5zqUfhJtWDgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
